name: deploy

on:
  push:
    branches: [main]

jobs:
  Deploy:
    runs-on: ubuntu-latest
    if: contains(github.event.head_commit.message, 'RELEASE')
    steps:
      - name: Checkout
        uses: actions/checkout@master
        with:
          persist-credentials: false

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-2

      - name: Create env file
        run: |
          touch .env
          echo BASE_URL=${{ secrets.BASE_URL }} >> .env
          echo NODE_ENV=production >> .env
          echo NEXT_PUBLIC_DOMAIN_NAME=${{ secrets.NEXT_PUBLIC_DOMAIN_NAME }} >> .env

          cat .env

      - name: Push New ECR
        run: |
          aws ecr get-login-password --region ap-northeast-2 | docker login --username AWS --password-stdin ${{ secrets.AWS_USER_ID }}.dkr.ecr.ap-northeast-2.amazonaws.com
          docker build . --platform linux/amd64 -t palmspring-client
          docker tag palmspring-client:latest ${{ secrets.AWS_USER_ID }}.dkr.ecr.ap-northeast-2.amazonaws.com/palmspring-client:latest
          docker push ${{ secrets.AWS_USER_ID }}.dkr.ecr.ap-northeast-2.amazonaws.com/palmspring-client:latest

      - name: 버전 정보 추출
        run: echo "##[set-output name=version;]$(echo '${{ github.event.head_commit.message }}' | egrep -o '[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}')"
        id: extract_version_name

      - name: Deploy to EB
        uses: einaregilsson/beanstalk-deploy@v21
        with:
          aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          application_name: Palmspring-client
          environment_name: Palmspring-client-subdomain
          version_label: version-${{ steps.extract_version_name.outputs.version }}
          use_existing_version_if_available: false
          region: ap-northeast-2
          deployment_package: docker-compose.yaml
          wait_for_deployment: 300
